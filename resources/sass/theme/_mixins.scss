@use 'sass:map';
@use "constants" as c;
@use '@material/base/mixins' as base-mixins;
@use "@material/button";
@use "@material/card";
@use "@material/checkbox";
@use "@material/chips/trailingaction" as chips-trailingaction;
@use "@material/chips";
@use "@material/circular-progress";
@use "@material/data-table/data-table";
@use "@material/dialog";
@use "@material/drawer";
@use "@material/elevation";
@use "@material/fab";
@use '@material/feature-targeting';
@use "@material/floating-label";
@use "@material/form-field";
@use "@material/icon-button";
@use "@material/image-list";
// @use "@material/layout-grid"; // Layout grid has no core-styles(), and this is handled elsewhere.
@use "@material/line-ripple";
@use "@material/linear-progress";
@use "@material/list";
@use "@material/menu";
@use "@material/menu-surface";
@use "@material/notched-outline";
@use "@material/radio";
@use "@material/ripple";
@use "@material/select/select";
@use "@material/slider/slider";
@use "@material/snackbar";
@use "@material/switch";
@use "@material/tab";
@use "@material/tab-bar";
@use "@material/tab-indicator";
@use "@material/tab-scroller";
@use "@material/textfield";
@use "@material/theme/theme-color";
// @use "@material/theme" as theme;
@use "fix-theme" as theme;
@use "@material/tooltip/tooltip";
@use "fix-top-app-bar" as top-app-bar; // Top app bar does not have its own core-styles() so we apply a fix to work here.
@use "@material/typography";

@mixin styles(
    $query: feature-targeting.all()
) {
    @include button.core-styles($query);
    @include card.core-styles($query);
    @include checkbox.core-styles($query);
    @include chips-trailingaction.core-styles($query);
    @include chips.core-styles($query);
    @include chips.set-core-styles($query);
    @include circular-progress.core-styles($query);
    @include data-table.core-styles($query);
    @include data-table.theme-baseline($query);
    @include dialog.core-styles($query);
    @include drawer.core-styles($query);
    @include drawer.dismissible-core-styles($query);
    @include drawer.modal-core-styles($query);
    @include elevation.core-styles($query);
    @include fab.core-styles($query);
    @include base-mixins.emit-once('mdc-floating-label') {
        @include floating-label.core-styles($query);
    }
    @include form-field.core-styles($query);
    @include icon-button.core-styles($query);
    @include image-list.core-styles($query);
    // Layout grid is handled elsewhere.
    @include base-mixins.emit-once('mdc-line-ripple') {
        @include line-ripple.core-styles($query);
    }
    @include linear-progress.core-styles($query);
    @include list.core-styles($query);
    @include menu.core-styles($query);
    @include menu-surface.core-styles($query);
    @include base-mixins.emit-once('mdc-notched-outline') {
        @include notched-outline.core-styles($query);
    }
    @include radio.core-styles($query);
    @include ripple.common($query);
    @include ripple.core-styles($query);
    @include select.core-styles($query);
    @include slider.core-styles($query);
    @include snackbar.core-styles($query);
    @include switch.core-styles($query);
    @include tab.core-styles($query);
    @include tab-bar.core-styles($query);
    @include tab-indicator.core-styles($query);
    @include tab-scroller.core-styles($query);
    @include textfield.core-styles($query);
    @include tooltip.core-styles($query); 
    @include top-app-bar.core-styles($query);
    @include typography.core-styles($query);
}

@mixin common-theme-work(
    $primary,
    $secondary,
    $background,
    $surface,
    $error
) {
    $on-primary:   if(theme-color.contrast-tone($primary) == "dark", c.$black, c.$white);
    $on-secondary: if(theme-color.contrast-tone($secondary) == "dark", c.$black, c.$white);
    $on-surface:   if(theme-color.contrast-tone($surface) == "dark", c.$black, c.$white);
    $on-error:     if(theme-color.contrast-tone($error) == "dark", c.$black, c.$white);
    $property-values: (
        primary:                      $primary,
        secondary:                    $secondary,
        background:                   $background,
        surface:                      $surface,
        error:                        $error,
        on-primary:                   $on-primary,
        on-secondary:                 $on-secondary,
        on-surface:                   $on-surface,
        on-error:                     $on-error,
        text-primary-on-background:   theme-color.ink-color-for-fill_(primary, $background),
        text-secondary-on-background: theme-color.ink-color-for-fill_(secondary, $background),
        text-hint-on-background:      theme-color.ink-color-for-fill_(hint, $background),
        text-disabled-on-background:  theme-color.ink-color-for-fill_(disabled, $background),
        text-icon-on-background:      theme-color.ink-color-for-fill_(icon, $background),
        text-primary-on-light:        theme-color.ink-color-for-fill_(primary, light),
        text-secondary-on-light:      theme-color.ink-color-for-fill_(secondary, light),
        text-hint-on-light:           theme-color.ink-color-for-fill_(hint, light),
        text-disabled-on-light:       theme-color.ink-color-for-fill_(disabled, light),
        text-icon-on-light:           theme-color.ink-color-for-fill_(icon, light),
        text-primary-on-dark:         theme-color.ink-color-for-fill_(primary, dark),
        text-secondary-on-dark:       theme-color.ink-color-for-fill_(secondary, dark),
        text-hint-on-dark:            theme-color.ink-color-for-fill_(hint, dark),
        text-disabled-on-dark:        theme-color.ink-color-for-fill_(disabled, dark),
        text-icon-on-dark:            theme-color.ink-color-for-fill_(icon, dark)
    );

    @include theme.core-styles($property-values, color);

    @include styles(color);
}
